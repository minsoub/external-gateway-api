# Spring Cloud Gateway server port
server:
  port: 7070
management:
  endpoints:
    web:
      exposure:
        include: metrics, prometheus, health
spring:
  cloud:
    gateway:
      metrics:
        enabled: true
---
spring:
  config:
    activate:
      on-profile: local
logging:
  config: classpath:logback-spring-${spring.profiles.active}.xml
sites:
  auth-url: http://localhost:8080
  smart-admin-url: http://localhost:8081
  lrc-app-url: http://localhost:8082
  cpc-app-url: http://localhost:8083
  lrc-token-ignore: /api/v1/lrc/captcha/siteverify,/api/v1/lrc/scam
---
spring:
  config:
    activate:
      on-profile: dev
logging:
  config: classpath:logback-spring-${spring.profiles.active}.xml
sites:
  auth-url: http://k8s-systemsd-systemsa-b1008c664c-a3ca74a448432ee0.elb.ap-northeast-2.amazonaws.com
  smart-admin-url: http://k8s-systemsd-systemsm-3411cecba4-a185780c02b3ce0f.elb.ap-northeast-2.amazonaws.com
  lrc-app-url: http://k8s-systemsd-lrcappap-51a49fed08-97638021b6a67650.elb.ap-northeast-2.amazonaws.com
  cpc-app-url: http://k8s-systemsd-cpcappap-0fd4253b97-c2bdae0b9ed776ca.elb.ap-northeast-2.amazonaws.com
  lrc-token-ignore: /api/v1/lrc/captcha/siteverify,/api/v1/lrc/scam
---
spring:
  config:
    activate:
      on-profile: eks-dev
logging:
  config: classpath:logback-spring-dev.xml
sites:
  auth-url: http://k8s-systemsd-systemsa-b1008c664c-a3ca74a448432ee0.elb.ap-northeast-2.amazonaws.com
  smart-admin-url: http://k8s-systemsd-systemsm-3411cecba4-a185780c02b3ce0f.elb.ap-northeast-2.amazonaws.com
  lrc-app-url: http://k8s-systemsd-lrcappap-51a49fed08-97638021b6a67650.elb.ap-northeast-2.amazonaws.com
  cpc-app-url: http://k8s-systemsd-cpcappap-0fd4253b97-c2bdae0b9ed776ca.elb.ap-northeast-2.amazonaws.com
  lrc-token-ignore: /api/v1/lrc/captcha/siteverify,/api/v1/lrc/scam
---
spring:
  config:
    activate:
      on-profile: prod
logging:
  config: classpath:logback-spring-${spring.profiles.active}.xml
sites:
  auth-url: http://k8s-systemsd-systemsa-b1008c664c-a3ca74a448432ee0.elb.ap-northeast-2.amazonaws.com
  smart-admin-url: http://k8s-systemsd-systemsm-3411cecba4-a185780c02b3ce0f.elb.ap-northeast-2.amazonaws.com
  lrc-app-url: http://k8s-systemsd-lrcappap-51a49fed08-97638021b6a67650.elb.ap-northeast-2.amazonaws.com
  cpc-app-url: http://k8s-systemsd-cpcappap-0fd4253b97-c2bdae0b9ed776ca.elb.ap-northeast-2.amazonaws.com
  lrc-token-ignore: /api/v1/lrc/captcha/siteverify,/api/v1/lrc/scam
---
# Spring cloud gateway setup
spring:
  cloud:
    gateway:
      # gateway common filter
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true
#       #Route definition
#       #ID, Destination(uri), Predicate, filter definition
#      routes:
#        - id: user-service
#          # destination
#          uri: http://localhost:8080
#          # Condition
#          predicates:
#            - Path=/user/**
#          # Filter
#          filters:
#            - name: UserFilter
#              args:
#                baseMessage: UserFilter apply
#                preLogger: true
#                postLooger: true
#            - RewritePath=/user/(?<path>.*),/api/v1/user/$\{path}
#        - id: adm-service
#          # destination
#          uri: http://localhost:8080
#          # Condition
#          predicates:
#            - Path=/adm/**
#          # Filter
#          filters:
#            - name: UserFilter
#              args:
#                baseMessage: UserFilter apply
#                preLogger: true
#                postLooger: true
#            - RewritePath=/adm/(?<path>.*),/api/v1/adm/$\{path}
#        - id: auth-service
#          # destination
#          uri: http://localhost:8080
#          # Condition
#          predicates:
#            - Path=/auth/**
#          # Filter
#          filters:
#            - name: AuthFilter
#              args:
#                baseMessage: AuthFilter apply
#                preLogger: true
#                postLooger: true
#        - id: api-service
#          uri: http://localhost:9092
#          predicates:
#            - Path=/api/**
#          filters:
#            - name: ApiFilter
#              args:
#                baseMessage: ApiFilter apply
#                preLogger: true
#                postLogger: true