# Spring Cloud Gateway server port
server:
  port: 7070
---
spring:
  config:
    import: classpath:aws-properties.yml
    activate:
      on-profile: local
  client:
    authUrl: http://localhost:8080
    smartAdminUrl: http://localhost:8081
    lrcAppUrl: http://localhost:8082
    cpcAppUrl: http://localhost:8083
logging:
  level:
    root: ${api.logging.level.root:DEBUG}
---
spring:
  config:
    import: classpath:aws-properties-dev.yml
    activate:
      on-profile: dev
  client:
    authUrl: http://localhost:8080
    smartAdminUrl: http://localhost:8081
    lrcAppUrl: http://localhost:8082
    cpcAppUrl: http://localhost:8083
---
spring:
  config:
    import: classpath:aws-properties-dev.yml
    activate:
      on-profile: prod
  client:
    authUrl: http://localhost:8080
    smartAdminUrl: http://localhost:8081
    lrcAppUrl: http://localhost:8082
    cpcAppUrl: http://localhost:8083
---
# Spring cloud gateway setup
#spring:
#  cloud:
#    gateway:
#      # gateway common filter
#      default-filters:
#        - name: GlobalFilter
#          args:
#            baseMessage: Spring Cloud Gateway GlobalFilter
#            preLogger: true
#            postLogger: true
#       #Route definition
#       #ID, Destination(uri), Predicate, filter definition
#      routes:
#        - id: user-service
#          # destination
#          uri: http://localhost:8080
#          # Condition
#          predicates:
#            - Path=/user/**
#          # Filter
#          filters:
#            - name: UserFilter
#              args:
#                baseMessage: UserFilter apply
#                preLogger: true
#                postLooger: true
#            - RewritePath=/user/(?<path>.*),/api/v1/user/$\{path}
#        - id: adm-service
#          # destination
#          uri: http://localhost:8080
#          # Condition
#          predicates:
#            - Path=/adm/**
#          # Filter
#          filters:
#            - name: UserFilter
#              args:
#                baseMessage: UserFilter apply
#                preLogger: true
#                postLooger: true
#            - RewritePath=/adm/(?<path>.*),/api/v1/adm/$\{path}
#        - id: auth-service
#          # destination
#          uri: http://localhost:8080
#          # Condition
#          predicates:
#            - Path=/auth/**
#          # Filter
#          filters:
#            - name: AuthFilter
#              args:
#                baseMessage: AuthFilter apply
#                preLogger: true
#                postLooger: true
#        - id: api-service
#          uri: http://localhost:9092
#          predicates:
#            - Path=/api/**
#          filters:
#            - name: ApiFilter
#              args:
#                baseMessage: ApiFilter apply
#                preLogger: true
#                postLogger: true